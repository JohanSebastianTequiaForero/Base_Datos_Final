"""add_tablas_nuevas

Revision ID: 321531718dff
Revises: 174f55200381
Create Date: 2025-06-04 10:19:48.619195

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '321531718dff'
down_revision: Union[str, None] = '174f55200381'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categorias',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('contratista_categoria',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contratista_id', sa.Integer(), nullable=True),
    sa.Column('categoria_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['categoria_id'], ['categorias.id'], ),
    sa.ForeignKeyConstraint(['contratista_id'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('contratos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('creador_id', sa.Integer(), nullable=True),
    sa.Column('fecha_inicio', sa.DateTime(), nullable=True),
    sa.Column('fecha_fin', sa.DateTime(), nullable=True),
    sa.Column('descripcion', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['creador_id'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('publicaciones',
    sa.Column('usuario_id', sa.Integer(), nullable=False),
    sa.Column('rol_id', sa.Integer(), nullable=True),
    sa.Column('likes', sa.Integer(), nullable=True),
    sa.Column('reproducciones', sa.Integer(), nullable=True),
    sa.Column('vistas', sa.Integer(), nullable=True),
    sa.Column('tipo_de_publicacion', sa.String(length=80), nullable=True),
    sa.Column('nombre_del_archivo', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['rol_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('usuario_id')
    )
    op.create_table('competencias',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=100), nullable=True),
    sa.Column('descripcion', sa.String(length=255), nullable=True),
    sa.Column('fecha_inicio', sa.DateTime(), nullable=True),
    sa.Column('fecha_fin', sa.DateTime(), nullable=True),
    sa.Column('artista_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['artista_id'], ['artistas.usuario_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vacantes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contrato_id', sa.Integer(), nullable=True),
    sa.Column('artista_id', sa.Integer(), nullable=True),
    sa.Column('usuario_id', sa.Integer(), nullable=True),
    sa.Column('descripcion', sa.String(length=255), nullable=True),
    sa.Column('titulo', sa.String(length=100), nullable=True),
    sa.Column('estado', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['artista_id'], ['artistas.usuario_id'], ),
    sa.ForeignKeyConstraint(['contrato_id'], ['contratos.id'], ),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('postulados',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vacante_id', sa.Integer(), nullable=True),
    sa.Column('artista_id', sa.Integer(), nullable=True),
    sa.Column('usuario_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['artista_id'], ['artistas.usuario_id'], ),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuarios.id'], ),
    sa.ForeignKeyConstraint(['vacante_id'], ['vacantes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('artistas', sa.Column('nombre', sa.String(length=50), nullable=True))
    op.add_column('artistas', sa.Column('seguidores', sa.Integer(), nullable=True))
    op.add_column('artistas', sa.Column('genero_id', sa.Integer(), nullable=True))
    op.drop_constraint(op.f('artistas_ibfk_1'), 'artistas', type_='foreignkey')
    op.create_foreign_key(None, 'artistas', 'generos_musicales', ['genero_id'], ['id'])
    op.drop_column('artistas', 'likes')
    op.drop_column('artistas', 'rol_id')
    op.drop_column('artistas', 'publicaciones')
    op.drop_column('artistas', 'reproducciones')
    op.drop_column('artistas', 'vistas')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('artistas', sa.Column('vistas', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('artistas', sa.Column('reproducciones', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('artistas', sa.Column('publicaciones', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('artistas', sa.Column('rol_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('artistas', sa.Column('likes', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'artistas', type_='foreignkey')
    op.create_foreign_key(op.f('artistas_ibfk_1'), 'artistas', 'roles', ['rol_id'], ['id'])
    op.drop_column('artistas', 'genero_id')
    op.drop_column('artistas', 'seguidores')
    op.drop_column('artistas', 'nombre')
    op.drop_table('postulados')
    op.drop_table('vacantes')
    op.drop_table('competencias')
    op.drop_table('publicaciones')
    op.drop_table('contratos')
    op.drop_table('contratista_categoria')
    op.drop_table('categorias')
    # ### end Alembic commands ###
